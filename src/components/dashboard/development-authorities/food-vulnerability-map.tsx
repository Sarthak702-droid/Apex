
'use client';

import { APIProvider, Map, AdvancedMarker } from '@vis.gl/react-google-maps';
import { Badge } from '@/components/ui/badge';
import { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';

const zones = [
    { id: 'patia', name: 'Patia', position: { lat: 20.35, lng: 85.82 }, vulnerability: 'low', description: "IT hub, high-income residential area with good access to modern retail." },
    { id: 'kharabela-nagar', name: 'Kharabela Nagar', position: { lat: 20.28, lng: 85.84 }, vulnerability: 'medium', description: "Commercial hub, dense population, dependent on daily market supply." },
    { id: 'old-town', name: 'Old Town', position: { lat: 20.24, lng: 85.83 }, vulnerability: 'high', description: "Historical area, narrow roads, potential logistics challenges during crises." },
    { id: 'mancheswar', name: 'Mancheswar', position: { lat: 20.30, lng: 85.86 }, vulnerability: 'low', description: "Industrial estate with large warehouses and good transport links." },
    { id: 'saheed-nagar', name: 'Saheed Nagar', position: { lat: 20.29, lng: 85.845 }, vulnerability: 'medium', description: "Busy residential & commercial area, relies heavily on daily market supplies." },
    { id: 'chandrasekharpur', name: 'Chandrasekharpur', position: { lat: 20.33, lng: 85.80 }, vulnerability: 'low', description: "Well-planned large residential area with multiple large-format retail stores." },
    { id: 'nayapalli', name: 'Nayapalli', position: { lat: 20.295, lng: 85.815 }, vulnerability: 'medium', description: "Dense residential area with mix of organized and unorganized retail." },
    { id: 'unit-1-market', name: 'Unit 1 Market', position: { lat: 20.27, lng: 85.84 }, vulnerability: 'high', description: "Central and oldest market, highly congested with critical supply dependencies." },
    { id: 'baramunda', name: 'Baramunda', position: { lat: 20.275, lng: 85.79 }, vulnerability: 'high', description: "Major transit hub (bus terminal), high transient population, vulnerable to transport strikes." },
    { id: 'rasulgarh', name: 'Rasulgarh', position: { lat: 20.29, lng: 85.86 }, vulnerability: 'medium', description: "A major traffic intersection and commercial area, prone to congestion which can delay supplies." },
    { id: 'jaydev-vihar', name: 'Jaydev Vihar', position: { lat: 20.305, lng: 85.815 }, vulnerability: 'low', description: "Affluent residential and commercial hub with good road networks and multiple retail options." },
    { id: 'pokhariput', name: 'Pokhariput', position: { lat: 20.25, lng: 85.80 }, vulnerability: 'low', description: "Large, planned residential area with good internal infrastructure and local markets." },
    { id: 'sundarpada', name: 'Sundarpada', position: { lat: 20.23, lng: 85.80 }, vulnerability: 'medium', description: "A rapidly developing residential area with growing demand and evolving infrastructure." },
    { id: 'unit-6', name: 'Unit 6', position: { lat: 20.27, lng: 85.83 }, vulnerability: 'low', description: "Government residential area, well-planned with stable access to supplies." },
    { id: 'unit-4', name: 'Unit 4', position: { lat: 20.28, lng: 85.83 }, vulnerability: 'medium', description: "Mixed-use area with local markets, subject to some supply pressure due to density." },
    { id: 'unit-8', name: 'Unit 8', position: { lat: 20.30, lng: 85.82 }, vulnerability: 'low', description: "Well-connected institutional and residential area with good infrastructure." },
];

const vulnerabilityStyles = {
    low: 'bg-green-500/80 hover:bg-green-600 border-green-700/80',
    medium: 'bg-yellow-500/80 hover:bg-yellow-600 border-yellow-700/80',
    high: 'bg-red-500/80 hover:bg-red-600 border-red-700/80',
};

const mapStyles: google.maps.MapTypeStyle[] = [
    { elementType: 'geometry', stylers: [{ color: '#242f3e' }] },
    { elementType: 'labels.text.stroke', stylers: [{ color: '#242f3e' }] },
    { elementType: 'labels.text.fill', stylers: [{ color: '#746855' }] },
    {
      featureType: 'administrative.locality',
      elementType: 'labels.text.fill',
      stylers: [{ color: '#d59563' }],
    },
    {
      featureType: 'poi',
      stylers: [{ visibility: 'off' }],
    },
    {
      featureType: 'road',
      elementType: 'geometry',
      stylers: [{ color: '#38414e' }],
    },
    {
      featureType: 'road',
      elementType: 'geometry.stroke',
      stylers: [{ color: '#212a37' }],
    },
    {
      featureType: 'road',
      elementType: 'labels.text.fill',
      stylers: [{ color: '#9ca5b3' }],
    },
    {
      featureType: 'road.highway',
      elementType: 'geometry',
      stylers: [{ color: '#746855' }],
    },
    {
      featureType: 'road.highway',
      elementType: 'geometry.stroke',
      stylers: [{ color: '#1f2835' }],
    },
    {
      featureType: 'road.highway',
      elementType: 'labels.text.fill',
      stylers: [{ color: '#f3d19c' }],
    },
    {
      featureType: 'transit',
      stylers: [{ visibility: 'off' }],
    },
    {
      featureType: 'water',
      elementType: 'geometry',
      stylers: [{ color: '#17263c' }],
    },
    {
      featureType: 'water',
      elementType: 'labels.text.fill',
      stylers: [{ color: '#515c6d' }],
    },
    {
      featureType: 'water',
      elementType: 'labels.text.stroke',
      stylers: [{ color: '#17263c' }],
    },
];

export function FoodVulnerabilityMap() {
    const [selectedZone, setSelectedZone] = useState<(typeof zones)[0] | null>(null);

    if (!process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY) {
        return (
            <div className="flex items-center justify-center h-full bg-muted/30 p-4 text-center rounded-lg border">
                <p className='text-muted-foreground'>Google Maps API key is not configured. Please add it to your environment variables as NEXT_PUBLIC_GOOGLE_MAPS_API_KEY.</p>
            </div>
        );
    }
    
    return (
        <div className="relative w-full aspect-[4/3] bg-muted/30 rounded-lg overflow-hidden border">
            <APIProvider apiKey={process.env.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}>
                <Map
                    defaultCenter={{ lat: 20.2961, lng: 85.8245 }}
                    defaultZoom={12}
                    mapId="a2b3c4d5e6f7g8h9"
                    styles={mapStyles}
                    disableDefaultUI={true}
                    gestureHandling={'greedy'}
                >
                    {zones.map(zone => (
                        <AdvancedMarker 
                            key={zone.id} 
                            position={zone.position}
                            onClick={() => setSelectedZone(zone)}
                        >
                            <Badge
                                className={`cursor-pointer transition-all text-white border-2 border-white/50 ${vulnerabilityStyles[zone.vulnerability as keyof typeof vulnerabilityStyles]}`}
                            >
                                {zone.name}
                            </Badge>
                        </AdvancedMarker>
                    ))}
                </Map>
            </APIProvider>
            
            <div className="absolute bottom-4 right-4 bg-background/80 p-3 rounded-md border shadow-lg">
                <h4 className="font-semibold text-xs mb-2">Vulnerability Legend</h4>
                <div className="flex flex-col gap-2">
                    <div className="flex items-center gap-2">
                        <div className="h-3 w-3 rounded-full bg-green-500"></div>
                        <span className="text-xs">Low Risk</span>
                    </div>
                    <div className="flex items-center gap-2">
                        <div className="h-3 w-3 rounded-full bg-yellow-500"></div>
                        <span className="text-xs">Medium Risk</span>
                    </div>
                    <div className="flex items-center gap-2">
                        <div className="h-3 w-3 rounded-full bg-red-500"></div>
                        <span className="text-xs">High Risk</span>
                    </div>
                </div>
            </div>

            {selectedZone && (
                <Card className='absolute top-4 left-4 w-64 bg-background/90'>
                    <CardHeader className='p-4'>
                        <CardTitle className='text-base'>{selectedZone.name}</CardTitle>
                        <CardDescription>Vulnerability: <span className={`capitalize font-semibold ${
                            selectedZone.vulnerability === 'high' ? 'text-red-500' : 
                            selectedZone.vulnerability === 'medium' ? 'text-yellow-500' : 'text-green-500'
                        }`}>{selectedZone.vulnerability}</span></CardDescription>
                    </CardHeader>
                    <CardContent className='p-4 pt-0'>
                        <p className='text-xs text-muted-foreground'>{selectedZone.description}</p>
                        <Button variant='link' className='p-0 h-auto mt-2 text-xs' onClick={() => setSelectedZone(null)}>Close</Button>
                    </CardContent>
                </Card>
            )}
        </div>
    );
}
